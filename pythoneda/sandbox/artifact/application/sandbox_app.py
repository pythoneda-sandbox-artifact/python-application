"""
pythoneda/sandbox/artifact/application/sandbox_artifact_app.py

This file defines the SandboxArtifactApp class.

Copyright (C) 2023-today rydnr's pythoneda-sandbox/python-artifact-application

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
import asyncio
from pythoneda.shared.artifact import LocalArtifact
from pythoneda.shared.artifact.application import LocalArtifactApp
from pythoneda.sandbox.artifact.infrastructure import LocalSandbox


class SandboxApp(LocalArtifactApp):
    """
    Runs the Sandbox artifact PythonEDA app.

    Class name: SandboxApp

    Responsibilities:
        - Runs the Sandbox artifact PythonEDA app.

    Collaborators:
        - Command-line handlers from pythoneda-shared-artifact/infrastructure
    """

    def __init__(self):
        """
        Creates a new SandboxArtifactApp instance.
        """
        # sandbox_banner is automatically generated by pythoneda-sandbox/python-artifact-application-artifact's flake.
        banner = None
        try:
            from pythoneda.sandbox.artifact.application.sandbox_banner import (
                SandboxBanner,
            )

            banner = SandboxBanner()
        except ImportError:
            pass
        super().__init__(banner, __file__)

    @classmethod
    def local_artifact_class(cls) -> type[LocalArtifact]:
        """
        Retrieves the subclass of LocalArtifact.
        :return: Such class.
        :rtype: type[LocalArtifact]
        """
        return LocalSandbox


if __name__ == "__main__":
    asyncio.run(
        SandboxArtifactApp.main("pythoneda.sandbox.artifact.application.SandboxApp")
    )
